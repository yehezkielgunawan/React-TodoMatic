{"version":3,"sources":["components/Todo.js","components/FilterButton.js","components/Form.js","App.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","wasEditing","value","ref","useRef","useEffect","current","usePrevious","newName","setNewName","editFieldRef","editButtonRef","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FilterButton","aria-pressed","isPressed","setFilter","Form","setName","addTask","autoComplete","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","taskList","map","key","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","updatedTasks","remainingTasks","editedTaskList","newTask","nanoid","tabIndex","role","aria-labelledby","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36cd2d9c.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const wasEditing = usePrevious(isEditing);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName}\r\n          onChange={handleChange}\r\n          ref={editFieldRef}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setEditing(false)}\r\n        >\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n        <input\r\n          id={props.id}\r\n          type=\"checkbox\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => props.toggleTaskCompleted(props.id)}\r\n        />\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn\"\r\n          onClick={() => setEditing(true)}\r\n          ref={editButtonRef}\r\n        >\r\n          Edit <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn__danger\"\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          Delete <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      editFieldRef.current.focus();\r\n    } else {\r\n      editButtonRef.current.focus();\r\n    }\r\n  }, [wasEditing, isEditing]);\r\n\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n}\r\n","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn toggle-btn\"\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name}</span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState(\"\");\r\n  \r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n  \r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Todo from \"./components/Todo\";\nimport FilterButton from \"./components/FilterButton\";\nimport Form from \"./components/Form\";\nimport { nanoid } from \"nanoid\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose 'completed' prop has been inverted\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">{filterList}</div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n\n      <footer>\n        © 2020 Remake by Yehezkiel Gunawan <br />\n        Using resource and knowledge from <br />\n        <a href=\"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">\n          MDN Wev Docs\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n  {id: \"todo-0\", name: \"Eat\", completed: true},\n  {id: \"todo-1\", name: \"Sleep\", completed: false},\n  {id: \"todo-2\", name: \"Repeat\", completed: false},\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}